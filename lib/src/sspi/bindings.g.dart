// ignore_for_file: type=lint
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

import 'binding_shims.dart' as shims;

export 'binding_shims.dart';

/// Bindings for `Sspi.h`.
///
/// Regenerate bindings with `dart run ffigen --config ffigen_configs/ffigen_sspi.yaml`.
///
class SspiBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  SspiBindings(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  SspiBindings.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup)
      : _lookup = lookup;

  int AcquireCredentialsHandleW(
    ffi.Pointer<ffi.Int> pszPrincipal,
    ffi.Pointer<ffi.Int> pszPackage,
    int fCredentialUse,
    ffi.Pointer<ffi.Void> pvLogonId,
    ffi.Pointer<ffi.Void> pAuthData,
    ffi.Pointer<
            ffi.NativeFunction<
                ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, ffi.UnsignedInt,
                    ffi.Pointer<ffi.Pointer<ffi.Void>>, ffi.Pointer<ffi.Int>)>>
        pGetKeyFn,
    ffi.Pointer<ffi.Void> pvGetKeyArgument,
    ffi.Pointer<shims.SecHandle> phCredential,
    ffi.Pointer<SECURITY_INTEGER> ptsExpiry,
  ) {
    return _AcquireCredentialsHandleW(
      pszPrincipal,
      pszPackage,
      fCredentialUse,
      pvLogonId,
      pAuthData,
      pGetKeyFn,
      pvGetKeyArgument,
      phCredential,
      ptsExpiry,
    );
  }

  late final _AcquireCredentialsHandleWPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Int>,
              ffi.Int,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<
                  ffi.NativeFunction<
                      ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, ffi.UnsignedInt,
                          ffi.Pointer<ffi.Pointer<ffi.Void>>, ffi.Pointer<ffi.Int>)>>,
              ffi.Pointer<ffi.Void>,
              ffi.Pointer<shims.SecHandle>,
              ffi.Pointer<SECURITY_INTEGER>)>>('AcquireCredentialsHandleW');
  late final _AcquireCredentialsHandleW = _AcquireCredentialsHandleWPtr.asFunction<
      int Function(
          ffi.Pointer<ffi.Int>,
          ffi.Pointer<ffi.Int>,
          int,
          ffi.Pointer<ffi.Void>,
          ffi.Pointer<ffi.Void>,
          ffi.Pointer<
              ffi.NativeFunction<
                  ffi.Void Function(ffi.Pointer<ffi.Void>, ffi.Pointer<ffi.Void>, ffi.UnsignedInt,
                      ffi.Pointer<ffi.Pointer<ffi.Void>>, ffi.Pointer<ffi.Int>)>>,
          ffi.Pointer<ffi.Void>,
          ffi.Pointer<shims.SecHandle>,
          ffi.Pointer<SECURITY_INTEGER>)>();

  int FreeCredentialsHandle(
    ffi.Pointer<shims.SecHandle> phCredential,
  ) {
    return _FreeCredentialsHandle(
      phCredential,
    );
  }

  late final _FreeCredentialsHandlePtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<shims.SecHandle>)>>('FreeCredentialsHandle');
  late final _FreeCredentialsHandle =
      _FreeCredentialsHandlePtr.asFunction<int Function(ffi.Pointer<shims.SecHandle>)>();

  int InitializeSecurityContextW(
    ffi.Pointer<shims.SecHandle> phCredential,
    ffi.Pointer<shims.SecHandle> phContext,
    ffi.Pointer<ffi.Int> pszTargetName,
    int fContextReq,
    int Reserved1,
    int TargetDataRep,
    ffi.Pointer<SecBufferDesc> pInput,
    int Reserved2,
    ffi.Pointer<shims.SecHandle> phNewContext,
    ffi.Pointer<SecBufferDesc> pOutput,
    ffi.Pointer<ffi.UnsignedInt> pfContextAttr,
    ffi.Pointer<SECURITY_INTEGER> ptsExpiry,
  ) {
    return _InitializeSecurityContextW(
      phCredential,
      phContext,
      pszTargetName,
      fContextReq,
      Reserved1,
      TargetDataRep,
      pInput,
      Reserved2,
      phNewContext,
      pOutput,
      pfContextAttr,
      ptsExpiry,
    );
  }

  late final _InitializeSecurityContextWPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<shims.SecHandle>,
              ffi.Pointer<shims.SecHandle>,
              ffi.Pointer<ffi.Int>,
              ffi.UnsignedInt,
              ffi.UnsignedInt,
              ffi.UnsignedInt,
              ffi.Pointer<SecBufferDesc>,
              ffi.UnsignedInt,
              ffi.Pointer<shims.SecHandle>,
              ffi.Pointer<SecBufferDesc>,
              ffi.Pointer<ffi.UnsignedInt>,
              ffi.Pointer<SECURITY_INTEGER>)>>('InitializeSecurityContextW');
  late final _InitializeSecurityContextW = _InitializeSecurityContextWPtr.asFunction<
      int Function(
          ffi.Pointer<shims.SecHandle>,
          ffi.Pointer<shims.SecHandle>,
          ffi.Pointer<ffi.Int>,
          int,
          int,
          int,
          ffi.Pointer<SecBufferDesc>,
          int,
          ffi.Pointer<shims.SecHandle>,
          ffi.Pointer<SecBufferDesc>,
          ffi.Pointer<ffi.UnsignedInt>,
          ffi.Pointer<SECURITY_INTEGER>)>();

  int CompleteAuthToken(
    ffi.Pointer<shims.SecHandle> phContext,
    ffi.Pointer<SecBufferDesc> pToken,
  ) {
    return _CompleteAuthToken(
      phContext,
      pToken,
    );
  }

  late final _CompleteAuthTokenPtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<shims.SecHandle>, ffi.Pointer<SecBufferDesc>)>>(
          'CompleteAuthToken');
  late final _CompleteAuthToken =
      _CompleteAuthTokenPtr.asFunction<int Function(ffi.Pointer<shims.SecHandle>, ffi.Pointer<SecBufferDesc>)>();

  int FreeContextBuffer(
    ffi.Pointer<ffi.Void> pvContextBuffer,
  ) {
    return _FreeContextBuffer(
      pvContextBuffer,
    );
  }

  late final _FreeContextBufferPtr =
      _lookup<ffi.NativeFunction<ffi.Int Function(ffi.Pointer<ffi.Void>)>>('FreeContextBuffer');
  late final _FreeContextBuffer = _FreeContextBufferPtr.asFunction<int Function(ffi.Pointer<ffi.Void>)>();
}

base class SECURITY_INTEGER extends ffi.Struct {
  @ffi.UnsignedInt()
  external int LowPart;

  @ffi.Int()
  external int HighPart;
}

base class SecBufferDesc extends ffi.Struct {
  @ffi.UnsignedInt()
  external int ulVersion;

  @ffi.UnsignedInt()
  external int cBuffers;

  external ffi.Pointer<SecBuffer> pBuffers;
}

base class SecBuffer extends ffi.Struct {
  @ffi.UnsignedInt()
  external int cbBuffer;

  @ffi.UnsignedInt()
  external int BufferType;

  external ffi.Pointer<ffi.Void> pvBuffer;
}

const int SECPKG_FLAG_INTEGRITY = 1;

const int SECPKG_FLAG_PRIVACY = 2;

const int SECPKG_FLAG_TOKEN_ONLY = 4;

const int SECPKG_FLAG_DATAGRAM = 8;

const int SECPKG_FLAG_CONNECTION = 16;

const int SECPKG_FLAG_MULTI_REQUIRED = 32;

const int SECPKG_FLAG_CLIENT_ONLY = 64;

const int SECPKG_FLAG_EXTENDED_ERROR = 128;

const int SECPKG_FLAG_IMPERSONATION = 256;

const int SECPKG_FLAG_ACCEPT_WIN32_NAME = 512;

const int SECPKG_FLAG_STREAM = 1024;

const int SECPKG_FLAG_NEGOTIABLE = 2048;

const int SECPKG_FLAG_GSS_COMPATIBLE = 4096;

const int SECPKG_FLAG_LOGON = 8192;

const int SECPKG_FLAG_ASCII_BUFFERS = 16384;

const int SECPKG_FLAG_FRAGMENT = 32768;

const int SECPKG_FLAG_MUTUAL_AUTH = 65536;

const int SECPKG_FLAG_DELEGATION = 131072;

const int SECPKG_FLAG_READONLY_WITH_CHECKSUM = 262144;

const int SECPKG_FLAG_RESTRICTED_TOKENS = 524288;

const int SECPKG_FLAG_NEGO_EXTENDER = 1048576;

const int SECPKG_FLAG_NEGOTIABLE2 = 2097152;

const int SECPKG_FLAG_APPCONTAINER_PASSTHROUGH = 4194304;

const int SECPKG_FLAG_APPCONTAINER_CHECKS = 8388608;

const int SECPKG_FLAG_CREDENTIAL_ISOLATION_ENABLED = 16777216;

const int SECPKG_FLAG_APPLY_LOOPBACK = 33554432;

const int SECPKG_ID_NONE = 65535;

const int SECPKG_CALLFLAGS_APPCONTAINER = 1;

const int SECPKG_CALLFLAGS_APPCONTAINER_AUTHCAPABLE = 2;

const int SECPKG_CALLFLAGS_FORCE_SUPPLIED = 4;

const int SECPKG_CALLFLAGS_APPCONTAINER_UPNCAPABLE = 8;

const int SECBUFFER_VERSION = 0;

const int SECBUFFER_EMPTY = 0;

const int SECBUFFER_DATA = 1;

const int SECBUFFER_TOKEN = 2;

const int SECBUFFER_PKG_PARAMS = 3;

const int SECBUFFER_MISSING = 4;

const int SECBUFFER_EXTRA = 5;

const int SECBUFFER_STREAM_TRAILER = 6;

const int SECBUFFER_STREAM_HEADER = 7;

const int SECBUFFER_NEGOTIATION_INFO = 8;

const int SECBUFFER_PADDING = 9;

const int SECBUFFER_STREAM = 10;

const int SECBUFFER_MECHLIST = 11;

const int SECBUFFER_MECHLIST_SIGNATURE = 12;

const int SECBUFFER_TARGET = 13;

const int SECBUFFER_CHANNEL_BINDINGS = 14;

const int SECBUFFER_CHANGE_PASS_RESPONSE = 15;

const int SECBUFFER_TARGET_HOST = 16;

const int SECBUFFER_ALERT = 17;

const int SECBUFFER_APPLICATION_PROTOCOLS = 18;

const int SECBUFFER_SRTP_PROTECTION_PROFILES = 19;

const int SECBUFFER_SRTP_MASTER_KEY_IDENTIFIER = 20;

const int SECBUFFER_TOKEN_BINDING = 21;

const int SECBUFFER_PRESHARED_KEY = 22;

const int SECBUFFER_PRESHARED_KEY_IDENTITY = 23;

const int SECBUFFER_DTLS_MTU = 24;

const int SECBUFFER_SEND_GENERIC_TLS_EXTENSION = 25;

const int SECBUFFER_SUBSCRIBE_GENERIC_TLS_EXTENSION = 26;

const int SECBUFFER_FLAGS = 27;

const int SECBUFFER_TRAFFIC_SECRETS = 28;

const int SECBUFFER_ATTRMASK = 4026531840;

const int SECBUFFER_READONLY = 2147483648;

const int SECBUFFER_READONLY_WITH_CHECKSUM = 268435456;

const int SECBUFFER_RESERVED = 1610612736;

const int SECURITY_NATIVE_DREP = 16;

const int SECURITY_NETWORK_DREP = 0;

const int SECPKG_CRED_INBOUND = 1;

const int SECPKG_CRED_OUTBOUND = 2;

const int SECPKG_CRED_BOTH = 3;

const int SECPKG_CRED_DEFAULT = 4;

const int SECPKG_CRED_RESERVED = 4026531840;

const int SECPKG_CRED_AUTOLOGON_RESTRICTED = 16;

const int SECPKG_CRED_PROCESS_POLICY_ONLY = 32;

const int ISC_REQ_DELEGATE = 1;

const int ISC_REQ_MUTUAL_AUTH = 2;

const int ISC_REQ_REPLAY_DETECT = 4;

const int ISC_REQ_SEQUENCE_DETECT = 8;

const int ISC_REQ_CONFIDENTIALITY = 16;

const int ISC_REQ_USE_SESSION_KEY = 32;

const int ISC_REQ_PROMPT_FOR_CREDS = 64;

const int ISC_REQ_USE_SUPPLIED_CREDS = 128;

const int ISC_REQ_ALLOCATE_MEMORY = 256;

const int ISC_REQ_USE_DCE_STYLE = 512;

const int ISC_REQ_DATAGRAM = 1024;

const int ISC_REQ_CONNECTION = 2048;

const int ISC_REQ_CALL_LEVEL = 4096;

const int ISC_REQ_FRAGMENT_SUPPLIED = 8192;

const int ISC_REQ_EXTENDED_ERROR = 16384;

const int ISC_REQ_STREAM = 32768;

const int ISC_REQ_INTEGRITY = 65536;

const int ISC_REQ_IDENTIFY = 131072;

const int ISC_REQ_NULL_SESSION = 262144;

const int ISC_REQ_MANUAL_CRED_VALIDATION = 524288;

const int ISC_REQ_RESERVED1 = 1048576;

const int ISC_REQ_FRAGMENT_TO_FIT = 2097152;

const int ISC_REQ_FORWARD_CREDENTIALS = 4194304;

const int ISC_REQ_NO_INTEGRITY = 8388608;

const int ISC_REQ_USE_HTTP_STYLE = 16777216;

const int ISC_REQ_UNVERIFIED_TARGET_NAME = 536870912;

const int ISC_REQ_CONFIDENTIALITY_ONLY = 1073741824;

const int ISC_REQ_MESSAGES = 4294967296;

const int SECPKG_CRED_ATTR_NAMES = 1;

const int SECPKG_CRED_ATTR_SSI_PROVIDER = 2;

const int SECPKG_CRED_ATTR_KDC_PROXY_SETTINGS = 3;

const int SECPKG_CRED_ATTR_CERT = 4;

const int SECPKG_CRED_ATTR_PAC_BYPASS = 5;

const int SECPKG_ATTR_SIZES = 0;

const int SECPKG_ATTR_NAMES = 1;

const int SECPKG_ATTR_LIFESPAN = 2;

const int SECPKG_ATTR_DCE_INFO = 3;

const int SECPKG_ATTR_STREAM_SIZES = 4;

const int SECPKG_ATTR_KEY_INFO = 5;

const int SECPKG_ATTR_AUTHORITY = 6;

const int SECPKG_ATTR_PROTO_INFO = 7;

const int SECPKG_ATTR_PASSWORD_EXPIRY = 8;

const int SECPKG_ATTR_SESSION_KEY = 9;

const int SECPKG_ATTR_PACKAGE_INFO = 10;

const int SECPKG_ATTR_USER_FLAGS = 11;

const int SECPKG_ATTR_NEGOTIATION_INFO = 12;

const int SECPKG_ATTR_NATIVE_NAMES = 13;

const int SECPKG_ATTR_FLAGS = 14;

const int SECPKG_ATTR_USE_VALIDATED = 15;

const int SECPKG_ATTR_CREDENTIAL_NAME = 16;

const int SECPKG_ATTR_TARGET_INFORMATION = 17;

const int SECPKG_ATTR_ACCESS_TOKEN = 18;

const int SECPKG_ATTR_TARGET = 19;

const int SECPKG_ATTR_AUTHENTICATION_ID = 20;

const int SECPKG_ATTR_LOGOFF_TIME = 21;

const int SECPKG_ATTR_NEGO_KEYS = 22;

const int SECPKG_ATTR_PROMPTING_NEEDED = 24;

const int SECPKG_ATTR_UNIQUE_BINDINGS = 25;

const int SECPKG_ATTR_ENDPOINT_BINDINGS = 26;

const int SECPKG_ATTR_CLIENT_SPECIFIED_TARGET = 27;

const int SECPKG_ATTR_LAST_CLIENT_TOKEN_STATUS = 30;

const int SECPKG_ATTR_NEGO_PKG_INFO = 31;

const int SECPKG_ATTR_NEGO_STATUS = 32;

const int SECPKG_ATTR_CONTEXT_DELETED = 33;

const int SECPKG_ATTR_DTLS_MTU = 34;

const int SECPKG_ATTR_DATAGRAM_SIZES = 4;

const int SECPKG_ATTR_SUBJECT_SECURITY_ATTRIBUTES = 128;

const int SECPKG_ATTR_APPLICATION_PROTOCOL = 35;

const int SECPKG_ATTR_NEGOTIATED_TLS_EXTENSIONS = 36;

const int SECPKG_ATTR_IS_LOOPBACK = 37;

const int SECPKG_ATTR_NEGO_INFO_FLAG_NO_KERBEROS = 1;

const int SECPKG_ATTR_NEGO_INFO_FLAG_NO_NTLM = 2;

const int SECPKG_NEGOTIATION_COMPLETE = 0;

const int SECPKG_NEGOTIATION_OPTIMISTIC = 1;

const int SECPKG_NEGOTIATION_IN_PROGRESS = 2;

const int SECPKG_NEGOTIATION_DIRECT = 3;

const int SECPKG_NEGOTIATION_TRY_MULTICRED = 4;

const int SECPKG_CONTEXT_EXPORT_RESET_NEW = 1;

const int SECPKG_CONTEXT_EXPORT_DELETE_OLD = 2;

const int SECPKG_CONTEXT_EXPORT_TO_KERNEL = 4;

const String SECURITY_ENTRYPOINT_ANSIW = 'InitSecurityInterfaceW';

const String SECURITY_ENTRYPOINT_ANSIA = 'InitSecurityInterfaceA';

const String SECURITY_ENTRYPOINTW = 'InitSecurityInterfaceW';

const String SECURITY_ENTRYPOINTA = 'InitSecurityInterfaceA';

const String SECURITY_ENTRYPOINT16 = 'INITSECURITYINTERFACEA';

const String SECURITY_ENTRYPOINT = 'INITSECURITYINTERFACEA';

const String SECURITY_ENTRYPOINT_ANSI = 'INITSECURITYINTERFACEA';

const int SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION = 1;

const int SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_2 = 2;

const int SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_3 = 3;

const int SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_4 = 4;

const int SECURITY_SUPPORT_PROVIDER_INTERFACE_VERSION_5 = 5;

const int SECPKG_OPTIONS_TYPE_UNKNOWN = 0;

const int SECPKG_OPTIONS_TYPE_LSA = 1;

const int SECPKG_OPTIONS_TYPE_SSPI = 2;

const int SECPKG_OPTIONS_PERMANENT = 1;

const int SECURITY_MAX_SID_STRING_CHARACTERS = 187;

const int SECURITY_NULL_RID = 0;

const int SECURITY_WORLD_RID = 0;

const int SECURITY_LOCAL_RID = 0;

const int SECURITY_LOCAL_LOGON_RID = 1;

const int SECURITY_CREATOR_OWNER_RID = 0;

const int SECURITY_CREATOR_GROUP_RID = 1;

const int SECURITY_CREATOR_OWNER_SERVER_RID = 2;

const int SECURITY_CREATOR_GROUP_SERVER_RID = 3;

const int SECURITY_CREATOR_OWNER_RIGHTS_RID = 4;

const int SECURITY_DIALUP_RID = 1;

const int SECURITY_NETWORK_RID = 2;

const int SECURITY_BATCH_RID = 3;

const int SECURITY_INTERACTIVE_RID = 4;

const int SECURITY_LOGON_IDS_RID = 5;

const int SECURITY_LOGON_IDS_RID_COUNT = 3;

const int SECURITY_SERVICE_RID = 6;

const int SECURITY_ANONYMOUS_LOGON_RID = 7;

const int SECURITY_PROXY_RID = 8;

const int SECURITY_ENTERPRISE_CONTROLLERS_RID = 9;

const int SECURITY_SERVER_LOGON_RID = 9;

const int SECURITY_PRINCIPAL_SELF_RID = 10;

const int SECURITY_AUTHENTICATED_USER_RID = 11;

const int SECURITY_RESTRICTED_CODE_RID = 12;

const int SECURITY_TERMINAL_SERVER_RID = 13;

const int SECURITY_REMOTE_LOGON_RID = 14;

const int SECURITY_THIS_ORGANIZATION_RID = 15;

const int SECURITY_IUSER_RID = 17;

const int SECURITY_LOCAL_SYSTEM_RID = 18;

const int SECURITY_LOCAL_SERVICE_RID = 19;

const int SECURITY_NETWORK_SERVICE_RID = 20;

const int SECURITY_NT_NON_UNIQUE = 21;

const int SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT = 3;

const int SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID = 22;

const int SECURITY_BUILTIN_DOMAIN_RID = 32;

const int SECURITY_WRITE_RESTRICTED_CODE_RID = 33;

const int SECURITY_PACKAGE_BASE_RID = 64;

const int SECURITY_PACKAGE_RID_COUNT = 2;

const int SECURITY_PACKAGE_NTLM_RID = 10;

const int SECURITY_PACKAGE_SCHANNEL_RID = 14;

const int SECURITY_PACKAGE_DIGEST_RID = 21;

const int SECURITY_CRED_TYPE_BASE_RID = 65;

const int SECURITY_CRED_TYPE_RID_COUNT = 2;

const int SECURITY_CRED_TYPE_THIS_ORG_CERT_RID = 1;

const int SECURITY_MIN_BASE_RID = 80;

const int SECURITY_SERVICE_ID_BASE_RID = 80;

const int SECURITY_SERVICE_ID_RID_COUNT = 6;

const int SECURITY_RESERVED_ID_BASE_RID = 81;

const int SECURITY_APPPOOL_ID_BASE_RID = 82;

const int SECURITY_APPPOOL_ID_RID_COUNT = 6;

const int SECURITY_VIRTUALSERVER_ID_BASE_RID = 83;

const int SECURITY_VIRTUALSERVER_ID_RID_COUNT = 6;

const int SECURITY_USERMODEDRIVERHOST_ID_BASE_RID = 84;

const int SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT = 6;

const int SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID = 85;

const int SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT = 6;

const int SECURITY_WMIHOST_ID_BASE_RID = 86;

const int SECURITY_WMIHOST_ID_RID_COUNT = 6;

const int SECURITY_TASK_ID_BASE_RID = 87;

const int SECURITY_NFS_ID_BASE_RID = 88;

const int SECURITY_COM_ID_BASE_RID = 89;

const int SECURITY_WINDOW_MANAGER_BASE_RID = 90;

const int SECURITY_RDV_GFX_BASE_RID = 91;

const int SECURITY_DASHOST_ID_BASE_RID = 92;

const int SECURITY_DASHOST_ID_RID_COUNT = 6;

const int SECURITY_USERMANAGER_ID_BASE_RID = 93;

const int SECURITY_USERMANAGER_ID_RID_COUNT = 6;

const int SECURITY_WINRM_ID_BASE_RID = 94;

const int SECURITY_WINRM_ID_RID_COUNT = 6;

const int SECURITY_CCG_ID_BASE_RID = 95;

const int SECURITY_UMFD_BASE_RID = 96;

const int SECURITY_VIRTUALACCOUNT_ID_RID_COUNT = 6;

const int SECURITY_MAX_BASE_RID = 111;

const int SECURITY_MAX_ALWAYS_FILTERED = 999;

const int SECURITY_MIN_NEVER_FILTERED = 1000;

const int SECURITY_OTHER_ORGANIZATION_RID = 1000;

const int SECURITY_WINDOWSMOBILE_ID_BASE_RID = 112;

const int SECURITY_INSTALLER_GROUP_CAPABILITY_BASE = 32;

const int SECURITY_INSTALLER_GROUP_CAPABILITY_RID_COUNT = 9;

const int SECURITY_INSTALLER_CAPABILITY_RID_COUNT = 10;

const int SECURITY_LOCAL_ACCOUNT_RID = 113;

const int SECURITY_LOCAL_ACCOUNT_AND_ADMIN_RID = 114;

const int SECURITY_APP_PACKAGE_BASE_RID = 2;

const int SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT = 2;

const int SECURITY_APP_PACKAGE_RID_COUNT = 8;

const int SECURITY_CAPABILITY_BASE_RID = 3;

const int SECURITY_CAPABILITY_APP_RID = 1024;

const int SECURITY_BUILTIN_CAPABILITY_RID_COUNT = 2;

const int SECURITY_CAPABILITY_RID_COUNT = 5;

const int SECURITY_PARENT_PACKAGE_RID_COUNT = 8;

const int SECURITY_CHILD_PACKAGE_RID_COUNT = 12;

const int SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE = 1;

const int SECURITY_BUILTIN_PACKAGE_ANY_RESTRICTED_PACKAGE = 2;

const int SECURITY_CAPABILITY_INTERNET_CLIENT = 1;

const int SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER = 2;

const int SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER = 3;

const int SECURITY_CAPABILITY_PICTURES_LIBRARY = 4;

const int SECURITY_CAPABILITY_VIDEOS_LIBRARY = 5;

const int SECURITY_CAPABILITY_MUSIC_LIBRARY = 6;

const int SECURITY_CAPABILITY_DOCUMENTS_LIBRARY = 7;

const int SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION = 8;

const int SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES = 9;

const int SECURITY_CAPABILITY_REMOVABLE_STORAGE = 10;

const int SECURITY_CAPABILITY_APPOINTMENTS = 11;

const int SECURITY_CAPABILITY_CONTACTS = 12;

const int SECURITY_CAPABILITY_INTERNET_EXPLORER = 4096;

const int SECURITY_MANDATORY_UNTRUSTED_RID = 0;

const int SECURITY_MANDATORY_LOW_RID = 4096;

const int SECURITY_MANDATORY_MEDIUM_RID = 8192;

const int SECURITY_MANDATORY_MEDIUM_PLUS_RID = 8448;

const int SECURITY_MANDATORY_HIGH_RID = 12288;

const int SECURITY_MANDATORY_SYSTEM_RID = 16384;

const int SECURITY_MANDATORY_PROTECTED_PROCESS_RID = 20480;

const int SECURITY_MANDATORY_MAXIMUM_USER_RID = 16384;

const int SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT = 1;

const int SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID = 1;

const int SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID = 2;

const int SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID = 3;

const int SECURITY_AUTHENTICATION_KEY_TRUST_RID = 4;

const int SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID = 5;

const int SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID = 6;

const int SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT = 2;

const int SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID = 1024;

const int SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID = 512;

const int SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID = 0;

const int SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID = 8192;

const int SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID = 4096;

const int SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID = 2048;

const int SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID = 1536;

const int SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID = 1024;

const int SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID = 0;

const int SECURITY_TRUSTED_INSTALLER_RID1 = 956008885;

const int SECURITY_TRUSTED_INSTALLER_RID2 = 3418522649;

const int SECURITY_TRUSTED_INSTALLER_RID3 = 1831038044;

const int SECURITY_TRUSTED_INSTALLER_RID4 = 1853292631;

const int SECURITY_TRUSTED_INSTALLER_RID5 = 2271478464;

const int SECURITY_DESCRIPTOR_REVISION = 1;

const int SECURITY_DESCRIPTOR_REVISION1 = 1;

const int SECURITY_DESCRIPTOR_MIN_LENGTH = 1;

const int SECURITY_MAX_IMPERSONATION_LEVEL = 3;

const int SECURITY_MIN_IMPERSONATION_LEVEL = 0;

const int SEC_E_OK = 0;

const int SEC_E_INSUFFICIENT_MEMORY = -2146893056;

const int SEC_E_INVALID_HANDLE = -2146893055;

const int SEC_E_UNSUPPORTED_FUNCTION = -2146893054;

const int SEC_E_TARGET_UNKNOWN = -2146893053;

const int SEC_E_INTERNAL_ERROR = -2146893052;

const int SEC_E_SECPKG_NOT_FOUND = -2146893051;

const int SEC_E_NOT_OWNER = -2146893050;

const int SEC_E_CANNOT_INSTALL = -2146893049;

const int SEC_E_INVALID_TOKEN = -2146893048;

const int SEC_E_CANNOT_PACK = -2146893047;

const int SEC_E_QOP_NOT_SUPPORTED = -2146893046;

const int SEC_E_NO_IMPERSONATION = -2146893045;

const int SEC_E_LOGON_DENIED = -2146893044;

const int SEC_E_UNKNOWN_CREDENTIALS = -2146893043;

const int SEC_E_NO_CREDENTIALS = -2146893042;

const int SEC_E_MESSAGE_ALTERED = -2146893041;

const int SEC_E_OUT_OF_SEQUENCE = -2146893040;

const int SEC_E_NO_AUTHENTICATING_AUTHORITY = -2146893039;

const int SEC_I_CONTINUE_NEEDED = 590610;

const int SEC_I_COMPLETE_NEEDED = 590611;

const int SEC_I_COMPLETE_AND_CONTINUE = 590612;

const int SEC_I_LOCAL_LOGON = 590613;

const int SEC_I_GENERIC_EXTENSION_RECEIVED = 590614;

const int SEC_E_BAD_PKGID = -2146893034;

const int SEC_E_CONTEXT_EXPIRED = -2146893033;

const int SEC_I_CONTEXT_EXPIRED = 590615;

const int SEC_E_INCOMPLETE_MESSAGE = -2146893032;

const int SEC_E_INCOMPLETE_CREDENTIALS = -2146893024;

const int SEC_E_BUFFER_TOO_SMALL = -2146893023;

const int SEC_I_INCOMPLETE_CREDENTIALS = 590624;

const int SEC_I_RENEGOTIATE = 590625;

const int SEC_E_WRONG_PRINCIPAL = -2146893022;

const int SEC_I_NO_LSA_CONTEXT = 590627;

const int SEC_E_TIME_SKEW = -2146893020;

const int SEC_E_UNTRUSTED_ROOT = -2146893019;

const int SEC_E_ILLEGAL_MESSAGE = -2146893018;

const int SEC_E_CERT_UNKNOWN = -2146893017;

const int SEC_E_CERT_EXPIRED = -2146893016;

const int SEC_E_ENCRYPT_FAILURE = -2146893015;

const int SEC_E_DECRYPT_FAILURE = -2146893008;

const int SEC_E_ALGORITHM_MISMATCH = -2146893007;

const int SEC_E_SECURITY_QOS_FAILED = -2146893006;

const int SEC_E_UNFINISHED_CONTEXT_DELETED = -2146893005;

const int SEC_E_NO_TGT_REPLY = -2146893004;

const int SEC_E_NO_IP_ADDRESSES = -2146893003;

const int SEC_E_WRONG_CREDENTIAL_HANDLE = -2146893002;

const int SEC_E_CRYPTO_SYSTEM_INVALID = -2146893001;

const int SEC_E_MAX_REFERRALS_EXCEEDED = -2146893000;

const int SEC_E_MUST_BE_KDC = -2146892999;

const int SEC_E_STRONG_CRYPTO_NOT_SUPPORTED = -2146892998;

const int SEC_E_TOO_MANY_PRINCIPALS = -2146892997;

const int SEC_E_NO_PA_DATA = -2146892996;

const int SEC_E_PKINIT_NAME_MISMATCH = -2146892995;

const int SEC_E_SMARTCARD_LOGON_REQUIRED = -2146892994;

const int SEC_E_SHUTDOWN_IN_PROGRESS = -2146892993;

const int SEC_E_KDC_INVALID_REQUEST = -2146892992;

const int SEC_E_KDC_UNABLE_TO_REFER = -2146892991;

const int SEC_E_KDC_UNKNOWN_ETYPE = -2146892990;

const int SEC_E_UNSUPPORTED_PREAUTH = -2146892989;

const int SEC_E_DELEGATION_REQUIRED = -2146892987;

const int SEC_E_BAD_BINDINGS = -2146892986;

const int SEC_E_MULTIPLE_ACCOUNTS = -2146892985;

const int SEC_E_NO_KERB_KEY = -2146892984;

const int SEC_E_CERT_WRONG_USAGE = -2146892983;

const int SEC_E_DOWNGRADE_DETECTED = -2146892976;

const int SEC_E_SMARTCARD_CERT_REVOKED = -2146892975;

const int SEC_E_ISSUING_CA_UNTRUSTED = -2146892974;

const int SEC_E_REVOCATION_OFFLINE_C = -2146892973;

const int SEC_E_PKINIT_CLIENT_FAILURE = -2146892972;

const int SEC_E_SMARTCARD_CERT_EXPIRED = -2146892971;

const int SEC_E_NO_S4U_PROT_SUPPORT = -2146892970;

const int SEC_E_CROSSREALM_DELEGATION_FAILURE = -2146892969;

const int SEC_E_REVOCATION_OFFLINE_KDC = -2146892968;

const int SEC_E_ISSUING_CA_UNTRUSTED_KDC = -2146892967;

const int SEC_E_KDC_CERT_EXPIRED = -2146892966;

const int SEC_E_KDC_CERT_REVOKED = -2146892965;

const int SEC_I_SIGNATURE_NEEDED = 590684;

const int SEC_E_INVALID_PARAMETER = -2146892963;

const int SEC_E_DELEGATION_POLICY = -2146892962;

const int SEC_E_POLICY_NLTM_ONLY = -2146892961;

const int SEC_I_NO_RENEGOTIATION = 590688;

const int SEC_E_NO_CONTEXT = -2146892959;

const int SEC_E_PKU2U_CERT_FAILURE = -2146892958;

const int SEC_E_MUTUAL_AUTH_FAILED = -2146892957;

const int SEC_I_MESSAGE_FRAGMENT = 590692;

const int SEC_E_ONLY_HTTPS_ALLOWED = -2146892955;

const int SEC_I_CONTINUE_NEEDED_MESSAGE_OK = 590694;

const int SEC_E_APPLICATION_PROTOCOL_MISMATCH = -2146892953;

const int SEC_I_ASYNC_CALL_PENDING = 590696;

const int SEC_E_INVALID_UPN_NAME = -2146892951;

const int SEC_E_EXT_BUFFER_TOO_SMALL = -2146892950;

const int SEC_E_INSUFFICIENT_BUFFERS = -2146892949;

const int SEC_E_NO_SPM = -2146893052;

const int SEC_E_NOT_SUPPORTED = -2146893054;
